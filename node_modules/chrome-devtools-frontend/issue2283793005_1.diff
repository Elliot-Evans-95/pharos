Index: front_end/timeline/TimelineFlameChart.js
diff --git a/front_end/timeline/TimelineFlameChart.js b/third_party/WebKit/Source/devtools/front_end/timeline/TimelineFlameChart.js
index 6d828a1deac55d510b6d732487f99fad8bd74f58..b30947eb5a6c268c5a8cab5fe62fdf44d07df13c 100644
--- a/front_end/timeline/TimelineFlameChart.js
+++ b/front_end/timeline/TimelineFlameChart.js
@@ -614,10 +614,8 @@ WebInspector.TimelineFlameChartDataProvider.prototype = {
      */
     _appendFrameBars: function(frames)
     {
-        var style = WebInspector.TimelineUIUtils.markerStyleForFrame();
         this._entryTypeByLevel[this._currentLevel] = WebInspector.TimelineFlameChartEntryType.Frame;
         for (var i = 0; i < frames.length; ++i) {
-            this._markers.push(new WebInspector.TimelineFlameChartMarker(frames[i].startTime, frames[i].startTime - this._model.minimumRecordTime(), style));
             this._appendFrame(frames[i]);
         }
         ++this._currentLevel;
Index: front_end/timeline/TimelineUIUtils.js
diff --git a/front_end/timeline/TimelineUIUtils.js b/third_party/WebKit/Source/devtools/front_end/timeline/TimelineUIUtils.js
index 876e4e32a0dc27028c98458cb52c4eb3a2d2b765..c6c5d1fd02d12906ea55da7af751de9a56a1b879 100644
--- a/front_end/timeline/TimelineUIUtils.js
+++ b/front_end/timeline/TimelineUIUtils.js
@@ -94,6 +94,16 @@ WebInspector.TimelineUIUtils._initEventStyles = function()
     eventStyles[recordTypes.MarkLoad] = new WebInspector.TimelineRecordStyle(WebInspector.UIString("Load event"), categories["scripting"], true);
     eventStyles[recordTypes.MarkDOMContent] = new WebInspector.TimelineRecordStyle(WebInspector.UIString("DOMContentLoaded event"), categories["scripting"], true);
     eventStyles[recordTypes.MarkFirstPaint] = new WebInspector.TimelineRecordStyle(WebInspector.UIString("First paint"), categories["painting"], true);
+
+    eventStyles[recordTypes.MarkFMP] = new WebInspector.TimelineRecordStyle(WebInspector.UIString("First meaningful paint"), categories["painting"], true);
+    eventStyles[recordTypes.MarkNavStart] = new WebInspector.TimelineRecordStyle(WebInspector.UIString("Navigation Start"), categories["loading"], true);
+    eventStyles[recordTypes.MarkTTI] = new WebInspector.TimelineRecordStyle(WebInspector.UIString("Time to Interactive"), categories["scripting"], true);
+    eventStyles[recordTypes.MarkFCP] = new WebInspector.TimelineRecordStyle(WebInspector.UIString("First contentful paint"), categories["painting"], true);
+    eventStyles[recordTypes.MarkVC1] = new WebInspector.TimelineRecordStyle(WebInspector.UIString("First visual change"), categories["painting"], true);
+    eventStyles[recordTypes.MarkVC100] = new WebInspector.TimelineRecordStyle(WebInspector.UIString("Visually complete"), categories["painting"], true);
+    eventStyles[recordTypes.MarkVC85] = new WebInspector.TimelineRecordStyle(WebInspector.UIString("Visually 85% complete"), categories["painting"], true);
+    eventStyles[recordTypes.MarkVC50] = new WebInspector.TimelineRecordStyle(WebInspector.UIString("Perceptual Speed Index"), categories["painting"], true);
+
     eventStyles[recordTypes.TimeStamp] = new WebInspector.TimelineRecordStyle(WebInspector.UIString("Timestamp"), categories["scripting"]);
     eventStyles[recordTypes.ConsoleTime] = new WebInspector.TimelineRecordStyle(WebInspector.UIString("Console Time"), categories["scripting"]);
     eventStyles[recordTypes.UserTiming] = new WebInspector.TimelineRecordStyle(WebInspector.UIString("User Timing"), categories["scripting"]);
@@ -1816,6 +1826,7 @@ WebInspector.TimelineUIUtils.markerStyleForEvent = function(event)
     var blue = "rgb(0, 0, 255)";
     var orange = "rgb(255, 178, 23)";
     var green = "rgb(0, 130, 0)";
+    var pink = "hsl(340, 82%, 69%)"
     var tallMarkerDashStyle = [10, 5];
 
     var title = WebInspector.TimelineUIUtils.eventTitle(event)
@@ -1842,10 +1853,23 @@ WebInspector.TimelineUIUtils.markerStyleForEvent = function(event)
         color = red;
         tall = true;
         break;
+    case recordTypes.MarkFMP:
+    case recordTypes.MarkFCP:
+        color = pink;
+        tall = true;
+        break;
+    case recordTypes.MarkVC1:
+    case recordTypes.MarkVC100:
+    case recordTypes.MarkVC85:
+    case recordTypes.MarkVC50:
     case recordTypes.MarkFirstPaint:
         color = green;
         tall = true;
         break;
+    case recordTypes.MarkTTI:
+        color = orange;
+        tall = true;
+        break;
     case recordTypes.TimeStamp:
         color = orange;
         break;
@@ -1860,21 +1884,6 @@ WebInspector.TimelineUIUtils.markerStyleForEvent = function(event)
     };
 }
 
-/**
- * @return {!WebInspector.TimelineMarkerStyle}
- */
-WebInspector.TimelineUIUtils.markerStyleForFrame = function()
-{
-    return {
-        title: WebInspector.UIString("Frame"),
-        color: "rgba(100, 100, 100, 0.4)",
-        lineWidth: 3,
-        dashStyle: [3],
-        tall: true,
-        lowPriority: true
-    };
-}
-
 /**
  * @param {string} url
  * @return {string}
Index: front_end/timeline_model/TimelineModel.js
diff --git a/front_end/timeline_model/TimelineModel.js b/third_party/WebKit/Source/devtools/front_end/timeline_model/TimelineModel.js
index 491ecee9ad09c5d37e17e2585c13db4d9fc4fafb..28dfa57946bfbc1d8ac511b698ce589af7674a41 100644
--- a/front_end/timeline_model/TimelineModel.js
+++ b/front_end/timeline_model/TimelineModel.js
@@ -93,6 +93,15 @@ WebInspector.TimelineModel.RecordType = {
 
     CommitLoad: "CommitLoad",
     MarkLoad: "MarkLoad",
+
+    MarkFMP: "MarkFMP",
+    MarkNavStart: "MarkNavStart",
+    MarkTTI: "MarkTTI",
+    MarkFCP: "MarkFCP",
+    MarkVC1: "MarkVC1",
+    MarkVC100: "MarkVC100",
+    MarkVC85: "MarkVC85",
+    MarkVC50: "MarkVC50",
     MarkDOMContent: "MarkDOMContent",
     MarkFirstPaint: "MarkFirstPaint",
 
@@ -1279,6 +1288,14 @@ WebInspector.TimelineModel.isMarkerEvent = function(event)
     switch (event.name) {
     case recordTypes.TimeStamp:
     case recordTypes.MarkFirstPaint:
+    case recordTypes.MarkNavStart:
+    case recordTypes.MarkFMP:
+    case recordTypes.MarkTTI:
+    case recordTypes.MarkFCP:
+    case recordTypes.MarkVC1:
+    case recordTypes.MarkVC100:
+    // case recordTypes.MarkVC85:
+    case recordTypes.MarkVC50:
         return true;
     case recordTypes.MarkDOMContent:
     case recordTypes.MarkLoad:
Index: front_end/ui_lazy/FlameChart.js
diff --git a/front_end/ui_lazy/FlameChart.js b/third_party/WebKit/Source/devtools/front_end/ui_lazy/FlameChart.js
index 3355cc77f925ffa7be4dcfdc373b4a124ea060eb..42044d7e424fa610ac940447e12483d1fc387851 100644
--- a/front_end/ui_lazy/FlameChart.js
+++ b/front_end/ui_lazy/FlameChart.js
@@ -1171,7 +1171,7 @@ WebInspector.FlameChart.prototype = {
         var markers = this._timelineData().markers;
         if (!markers)
             return -1;
-        var accurracyOffsetPx = 1;
+        var accurracyOffsetPx = 3;
         var time = this._cursorTime(x);
         var leftTime = this._cursorTime(x - accurracyOffsetPx);
         var rightTime = this._cursorTime(x + accurracyOffsetPx);
@@ -1661,6 +1661,7 @@ WebInspector.FlameChart.prototype = {
         var marker = this._timelineData().markers[markerIndex];
         var barX = this._timeToPositionClipped(marker.startTime());
         element.title = marker.title();
+        WebInspector.Tooltip.install(element, marker.title());
         var style = element.style;
         style.left = barX + "px";
         style.backgroundColor = marker.color();
